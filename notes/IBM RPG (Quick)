RPG - quick notes

for char fields, *HIVAL -> *blanks

Found this new tool in HelpSystems Toolbox - to quickly check a variables attributes in a SQL/RPGLE sources.
Run line command RV "Retrieve Variables" while in browse/edit mode in SEU.
or
Compile the program once in your library
Now, Press F7 on the variabe to quickly "Retrieve Variable Attributes" 
Common errors: 
Variable name not found. Make sure you first run the RV line command.
You may later delete the *SPLFs
[The source member name has changed
since the last time the variable  
attributes were retrieved.        
                                  
Retrieve attributes now? Y        
Include key/parameter lists? N]
------------------------------------------------------------------------------------------------------------------------
                         Additional Message Information                        
                                                                               
 Message ID . . . . . . :   CVT0265       Severity . . . . . . . :   00        
 Message type . . . . . :   Diagnostic                                         
                                                                               
 Message . . . . :   Variable name not found. Make sure you first run the RV   
   line command.                                                               
 The RV line command needs to run first to retrieve the attributes for all the 
   variables in the source member.                                             
------------------------------------------------------------------------------------------------------------------------

//variable used as PARM can't be initialized.
 *RNF3748 20      1 Keyword is not allowed for a parameter definition; keyword is    
                    ignored.                                                         

char (99) const options(*nopass);
//when a const field is EVAL'ed/modified.
*RNF5346 30      1 The operation modifies the field, but the field cannot be
                   modified.          
                   
//when a const field is passed as PARM
*RNF5035 30      1 The Result-Field operand must be a field that can be        
                   modified.                                                  

//error, if option(*nopass), but PARM not monitored using 'if %parms() >= %parmnum($PARM);'
Pointer not set for location referenced.
RNQ0222 - Pointer or parameter error (C G D F).

func_code          char(2) const options(*nopass);              
//'LIKE' keyword doesn't go well with const/within PR.                          
//func_code          like($FUNC) const options(*nopass);        
