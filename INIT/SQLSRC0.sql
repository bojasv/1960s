-- Open this file in ACS's 'Run SQL Scripts'
-- Replace 'OXBLIB' with your test library
-- To run all statements at once, press Ctrl+Shift+A 

CL: CRTLIB LIB(OJASVA) TYPE(*PROD) TEXT('Work Lib for Ojasva') ;
SET SCHEMA OJASVA ;
CREATE TABLE QAUOOPT LIKE QGPL.QAUOOPT ;

-- Can also use the following statement
-- CREATE TABLE OXBLIB/QAUOOPT AS (SELECT * FROM QGPL/QAUOOPT) WITH NO DATA ;
-- If you want data in the new file, use the following statement
-- CREATE TABLE OXBLIB/QAUOOPT AS (SELECT * FROM QGPL/QAUOOPT) WITH DATA ;

INSERT INTO QAUOOPT VALUES(' C', 'CALL &O/&N') ;
INSERT INTO QAUOOPT VALUES(' Q', 'WRKMBRPDM FILE(OXBLIB/QTOOLSRC)') ;
INSERT INTO QAUOOPT VALUES(' W', 'WRKMBRPDM') ;
INSERT INTO QAUOOPT VALUES('AL', 'ADDLIBLE LIB(&L) POSITION(*FIRST)') ;
INSERT INTO QAUOOPT VALUES('BY', 'SIGNOFF LOG(*NOLIST) ENDCNN(*NO)') ;
INSERT INTO QAUOOPT VALUES('B1', 'CRTSAVF FILE($OJSAVF) TEXT(''Contains OJASVA *LIB'')') ;
INSERT INTO QAUOOPT VALUES('B2', 'CLRSAVF FILE($OJSAVF)') ;
INSERT INTO QAUOOPT VALUES('B3', 'SAVLIB LIB(OJASVA) DEV(*SAVF) SAVF($OJSAVF)') ;
INSERT INTO QAUOOPT VALUES('B4', 'RSTLIB LIB(OJASVA) DEV(*SAVF) SAVF($OJSAVF)') ;
INSERT INTO QAUOOPT VALUES('C1', 'CRTBNDCL PGM(&L/&N) SRCFILE(&L/&F) SRCMBR(&N) DBGVIEW(*SOURCE)') ;
INSERT INTO QAUOOPT VALUES('CC', 'CHGCURLIB CURLIB(&L)') ;
INSERT INTO QAUOOPT VALUES('CF', 'RUNSQLSTM SRCFILE(&L/&F) SRCMBR(&N) COMMIT(*NONE) DFTRDBCOL(&L)') ;
INSERT INTO QAUOOPT VALUES('CH', 'CHGPF FILE(&L/&N)') ;
INSERT INTO QAUOOPT VALUES('CL', 'CLRPFM FILE(&L/&N)') ;
INSERT INTO QAUOOPT VALUES('CM', 'CMPPFM NEWFILE(&L/&F) NEWMBR(&N) OLDFILE(&L/&F) OLDMBR(&N) CMPTYPE(*LINE)') ;
INSERT INTO QAUOOPT VALUES('CQ', 'CRTSQLRPGI OBJ(&L/&N) SRCFILE(&L/&F) SRCMBR(&N) COMMIT(*NONE) DBGVIEW(*SOURCE)') ;
INSERT INTO QAUOOPT VALUES('CS', 'CRTSRCPF FILE(&L/&F) RCDLEN(112)') ;
INSERT INTO QAUOOPT VALUES('CY', 'CPYSRCF FROMFILE(#IASRC/&F) TOFILE(&L/&F) FROMMBR(&N) MBROPT(*ADD)') ;
INSERT INTO QAUOOPT VALUES('DB', 'DSPDBR FILE(&L/&N)') ;
INSERT INTO QAUOOPT VALUES('DF', 'DSPFFD FILE(&L/&N)') ;
INSERT INTO QAUOOPT VALUES('DJ', 'DSPJOBLOG') ;
INSERT INTO QAUOOPT VALUES('DL', 'DSPLIBL') ;
INSERT INTO QAUOOPT VALUES('DM', 'DSPMODSRC') ;
INSERT INTO QAUOOPT VALUES('ED', 'ENDDBG') ;
INSERT INTO QAUOOPT VALUES('EL', 'EDTLIBL') ;
INSERT INTO QAUOOPT VALUES('ES', 'ENDSRVJOB') ;
INSERT INTO QAUOOPT VALUES('IP', 'WRKTCPSTS *IFC') ;
INSERT INTO QAUOOPT VALUES('JL', 'DSPJOBLOG') ;
INSERT INTO QAUOOPT VALUES('LN', 'WRKLNK /') ;
INSERT INTO QAUOOPT VALUES('MR', 'MRGSRC TGTFILE(&L/&F) TGTMBR(&N) MAINTFILE(&L/&F) MAINTMBR(&N) ROOTFILE(&L/&F) ROOTMBR(&N)') ;
INSERT INTO QAUOOPT VALUES('P0', 'CRTPGM PGM(&L/&N) MODULE(&L/&N)') ;
INSERT INTO QAUOOPT VALUES('P1', 'RUNSQLSTM SRCFILE(&L/&F) SRCMBR(&N) COMMIT(*NONE) NAMING(*SYS) DFTRDBCOL(&L) DBGVIEW(*SOURCE)') ;
INSERT INTO QAUOOPT VALUES('QT', 'DSPLIB LIB(QTEMP)') ;
INSERT INTO QAUOOPT VALUES('R1', 'CRTBNDRPG PGM(&L/&N) SRCFILE(&L/&F) SRCMBR(&N) DBGVIEW(*SOURCE)') ;
INSERT INTO QAUOOPT VALUES('RQ', 'RUNQRY QRYFILE((&L/&N *FIRST))') ;
INSERT INTO QAUOOPT VALUES('RS', 'RUNSQLSTM SRCFILE(&L/&F) SRCMBR(&N) COMMIT(*NONE) DFTRDBCOL(&L)') ;
INSERT INTO QAUOOPT VALUES('S1', 'CRTSQLRPGI OBJ(&L/&N) SRCFILE(&L/&F) SRCMBR(&N) COMMIT(*NONE) OBJTYPE(*MODULE) DBGVIEW(*SOURCE)') ;
INSERT INTO QAUOOPT VALUES('SD', 'STRDBG PGM(&L/&N) UPDPROD(*YES) OPMSRC(*YES) DSPMODSRC(*YES)') ;
INSERT INTO QAUOOPT VALUES('SL', 'CALL PGM(OXBLIB/SETLIBLOXB)') ;
INSERT INTO QAUOOPT VALUES('SL', 'SBMJOB ??CMD(SAVLIB LIB(&N))') ;
INSERT INTO QAUOOPT VALUES('SM', 'SBMJOB ??CMD(SAVOBJ OBJ(&F) LIB(&L) OBJTYPE(*FILE) FILEMBR((&F (&N))))') ;
INSERT INTO QAUOOPT VALUES('SO', 'SBMJOB ??CMD(SAVOBJ OBJ(&N) LIB(&L))') ;
INSERT INTO QAUOOPT VALUES('SP', 'WRKSPLF') ;
INSERT INTO QAUOOPT VALUES('SQ', 'STRSQL') ;
INSERT INTO QAUOOPT VALUES('SS', 'STRSRVJOB') ;
INSERT INTO QAUOOPT VALUES('SV', 'STRDBG UPDPROD(*YES) OPMSRC(*YES) SRVPGM(&L/&N)') ;
INSERT INTO QAUOOPT VALUES('UP', 'UPDDTA FILE(&L/&N)') ;
INSERT INTO QAUOOPT VALUES('US', 'UPDSRVPGM SRVPGM(&L/&N) MODULE(&L/&N)') ;
INSERT INTO QAUOOPT VALUES('WA', 'WRKACTJOB SBS(QINTER)') ;
INSERT INTO QAUOOPT VALUES('WO', 'WRKOBJ &L/&N') ;
INSERT INTO QAUOOPT VALUES('WS', 'WRKSBMJOB') ;
INSERT INTO QAUOOPT VALUES('WU', 'WRKUSRJOB') ;
INSERT INTO QAUOOPT VALUES('Y9', 'SIGNOFF ENDCNN(*YES)') ;
INSERT INTO QAUOOPT VALUES('YC', 'CMPPFM NEWFILE(&L/&F) NEWMBR(&N) OLDFILE(#IAEMG/&F) OLDMBR(&N)') ;
INSERT INTO QAUOOPT VALUES('YC', 'CRTBNDCL PGM(&L/&N) SRCFILE(&L/&F) REPLACE(*YES) DBGVIEW(*SOURCE)') ;
INSERT INTO QAUOOPT VALUES('YD', 'DLTSPLF FILE(*SELECT)') ;
INSERT INTO QAUOOPT VALUES('YD', 'DLTSPLF FILE(*SELECT)') ;
INSERT INTO QAUOOPT VALUES('YM', 'MRGSRC TGTFILE(&L/&F) TGTMBR(&N) MAINTFILE(&L/&F) MAINTMBR(TEST) ROOTFILE(&L/&F) ROOTMBR(&N)') ;
INSERT INTO QAUOOPT VALUES('YR', 'CRTBNDRPG PGM(&L/&N) SRCFILE(&F) DBGVIEW(*SOURCE)') ;
INSERT INTO QAUOOPT VALUES('YS', 'CRTSQLRPGI OBJ(&L/&N) SRCFILE(&L/&F) DBGVIEW(*SOURCE)') ;

CL: CPYF FROMFILE(QGPL/QAUOOPT) TOFILE(OJASVA/QAUOOPT) MBROPT(*ADD) INCCHAR(*FLD 1 *EQ 'AI') ;
CL: CPYF FROMFILE(QGPL/QAUOOPT) TOFILE(OJASVA/QAUOOPT) MBROPT(*ADD) INCCHAR(*FLD 1 *EQ 'IA') ;
CL: CPYF FROMFILE(QGPL/QAUOOPT) TOFILE(OJASVA/QAUOOPT) MBROPT(*ADD) INCCHAR(*FLD 1 *EQ 'S1') ;
CL: CPYF FROMFILE(QGPL/QAUOOPT) TOFILE(OJASVA/QAUOOPT) MBROPT(*ADD) INCCHAR(*FLD 1 *EQ 'S2') ;
CL: CPYF FROMFILE(QGPL/QAUOOPT) TOFILE(OJASVA/QAUOOPT) MBROPT(*ADD) INCCHAR(*FLD 1 *EQ 'S3') ;
CL: CPYF FROMFILE(QGPL/QAUOOPT) TOFILE(OJASVA/QAUOOPT) MBROPT(*ADD) INCCHAR(*FLD 1 *EQ 'SV') ;

-- WRKMBRPDM shorthand
    -- create CL program
CL: CRTSRCPF FILE(OJASVA/QCLSRC) RCDLEN(112) TEXT('CL Source Members') ;
CL: ADDPFM FILE(OJASVA/QCLSRC) MBR(WMP) TEXT('WRKMBRPDM Shorthand') SRCTYPE(CLLE) ;
INSERT INTO OJASVA.QCLSRC VALUES(000010, 000000, 'wrkmbrpdm') ;
INSERT INTO OJASVA.QCLSRC VALUES(000020, 000000, 'monmsg cpf0000') ;
CL: CRTBNDCL PGM(QGPL/WMP) SRCFILE(OJASVA/QCLSRC) SRCMBR(WMP) DBGVIEW(*SOURCE) ;
    -- create CMD source
CL: CRTSRCPF FILE(OJASVA/QCMDSRC) RCDLEN(112) TEXT('Command Source Members') ;
CL: ADDPFM FILE(OJASVA/QCMDSRC) MBR(W) TEXT('WRKMBRPDM Shorthand') SRCTYPE(CMD) ;
INSERT INTO OJASVA.QCMDSRC VALUES(000010, 000000, 'cmd prompt(''WRKMBRPDM shorthand'')') ;
CL: CRTCMD CMD(QGPL/W) PGM(QGPL/WMP) SRCFILE(OJASVA/QCMDSRC) SRCMBR(W) ;
    -- delete the source members for CLLE and CMD
CL: RMVM FILE(OJASVA/QCLSRC) MBR(WMP);
CL: RMVM FILE(OJASVA/QCMDSRC) MBR(W);
    -- delete both spools
CL: DLTSPLF FILE(WMP) JOB(OJASVA/QPRTJOB) SPLNBR(*LAST) JOBSYSNAME(*ANY) CRTDATE(*LAST) ;
CL: DLTSPLF FILE(W) JOB(OJASVA/QPRTJOB) SPLNBR(*LAST) JOBSYSNAME(*ANY) CRTDATE(*LAST) ;

-- Other general PF-SRCs
CL: CRTSRCPF FILE(OJASVA/QRPGLESRC) RCDLEN(112) TEXT('RPGLE Source Members') ;
CL: CRTSRCPF FILE(OJASVA/QDDSSRC) RCDLEN(112) TEXT('DB Files - Data Description Specs') ;
-- RCDLEN for DDLs can go upto 32766 bytes, but to prevent EDT0303 keep it to 240
-- 240 req hi performance
-- or the alternative is to store SQL source members on IFS (6144 bytes)
-- On 5250 console (the green-screen) IFS can only show 2084 byte/record
-- On a 27x132 screen size, you can view 132 bytes/record at once
-- i.e. you'd need to press F20/F19 15-16 times to goto End-Of-Record/Beginning-Of-Record (EOR/BOR)
CL: CRTSRCPF FILE(OJASVA/QDDLSRC) RCDLEN(240) TEXT('DB Files - Data Definition Language') ;
CL: CRTSRCPF FILE(OJASVA/QSQLSRC) RCDLEN(240) TEXT('RUNSQLSTM Source Members') ;

-- Add a dummy SRCMBR to change session defaults for SEU
CL: ADDPFM FILE(OJASVA/QRPGLESRC) MBR(SEU_F13) TEXT('Use me to set session defaults') SRCTYPE(CLLE) ;
INSERT INTO OJASVA.QRPGLESRC VALUES(000001, 000000, 'RSTLIB OJASVA *SAVF SAVF(OJASVA/$OJSAVF)');
INSERT INTO OJASVA.QRPGLESRC VALUES(000002, 000000, 'MONMSG CPF0000');
INSERT INTO OJASVA.QRPGLESRC VALUES(000003, 000000, 'RSTLIB UDSMT *SAVF SAVF(OJASVA/$UDSAVF)');
INSERT INTO OJASVA.QRPGLESRC VALUES(000004, 000000, 'MONMSG CPF0000');
INSERT INTO OJASVA.QRPGLESRC VALUES(000005, 000000, 'RSTLIB UDSMTS *SAVF SAVF(OJASVA/$USSAVF)');
INSERT INTO OJASVA.QRPGLESRC VALUES(000006, 000000, 'MONMSG CPF0000');
CL: CRTBNDCL PGM(OJASVA/SEU_F13) SRCFILE(OJASVA/QRPGLESRC) SRCMBR(SEU_F13) DBGVIEW(*SOURCE);
CL: DLTSPLF FILE(SEU_F13) JOB(OJASVA/QPRTJOB) SPLNBR(*LAST) JOBSYSNAME(*ANY) CRTDATE(*LAST);
-- Can also check the VxRxMx of the OS by printing above SEU member and accessing its SPLF QPSUPRTF 
-- CL: STRSEU SRCFILE(OJASVA/QRPGLESRC) SRCMBR(SEU_F13) OPTION(6);
-- 5770WDS - IBM Rational Development Studio for i (5770-WDS), incl. ADTS, compilers for IBM ILE RPG, COBOL, C, C++, RPG/400Â®, S/36 RPGII and COBOL, S/38 RPGIII and COBOL, OPM COBOL etc.
-- 5770SS1 - IBM Control Language Compiler

-- RUNSQLSTM accepts STMF path upto 50 chars ('/qsys.lib/L123456789.lib/F123456789.file/M1234.mbr')

-- Require for VS Code cfg
CL: MKDIR DIR('/home/OJASVA') ;
CL: CHGPRF HOMEDIR('/home/OJASVA');
CL: CHGPDMDFT USER(OJASVA) RPLOBJ(*YES) CRTBCH(*NO) CHGTYPTXT(*NO) FILE(OJASVA/QAUOOPT) FULLSCN(*YES);

-- Print Spool to check VRM using QSS1MRI (present in QUSRSYS or QGPL)
-- For older releases, can also use QUSRSYS/QIZAVRM or QTOIVRM
-- CL: DSPDTAARA DTAARA(QSS1MRI) OUTPUT(*PRINT); or use below SQL Query

SELECT SUBSTRING(Data_Area_Value, 1, 8)
  FROM Qsys2.Data_Area_Info
  WHERE Data_Area_Library = 'QUSRSYS'
        AND Data_Area_Name = 'QSS1MRI';

-- WRKHDWRSC TYPE(*PRC) Look-out for Resource = Main Card Enclosure and Status = Operational
SELECT Machine_Type AS System_Type#,
       Machine_Model AS System_Model#,
       Serial_Number AS System_Serial#,
       Configured_Cpus AS Cpu_Count,
       (Main_Storage_Size / 1000000) AS Total_Gbs,
       Number_Of_Partitions AS Lpars,
       Partition_Id AS Current_Lpar#,
       Host_Name AS Server_Name
  FROM Qsys2.System_Status_Info;

-- Or use CALL QSYS/QLZARCAPI and see the joblog
-- or use following (also gives the details of the TR level)
SELECT CURRENT SERVER CONCAT ' is running ' CONCAT Ptf_Group_Target_Release CONCAT ' with TR level: ' CONCAT Ptf_Group_Level AS Tr_Level
FROM Qsys2.Group_Ptf_Info
WHERE Ptf_Group_Description = 'TECHNOLOGY REFRESH'
      AND Ptf_Group_Status = 'INSTALLED'
ORDER BY Ptf_Group_Target_Release DESC
FETCH FIRST 1 ROWS ONLY;

-- GO LICPGM, then Option 10. Display installed licensed programs, then F11=Display release.
SELECT Installed,
       Expir_Date AS Expires,
       Grace_Prd AS Grace,
       Licpgm,
       Lic_Term,
       Rls_Lvl,
       Feature,
       Proc_Group AS Proc_Grp,
       CAST(Label AS VARCHAR(100) CCSID 37) AS Description
  FROM Qsys2.License_Info;

-- P1310XPV is running V7R3M0 with TR level: 12

-- /qsys.lib/OJASVA.lib/
-- CL: CALL PGM(OJASVA/SEU_F13);
-- WRKMBRPDM FILE(OJASVA/QRPGLESRC)
-- Use above path to upload *SAVF and use PDM Opt B4 or command RSTLIB LIB(OJASVA) DEV(*SAVF) SAVF($OJSAVF);

-- CL: CHGPRF INLPGM(OJASVA/INIT); 
-- *SECADM required to create or change user profiles.
-- CL: CHGUSRPRF USRPRF(OJASVA) HOMEDIR('/home/OJASVA') ;
stop ;
-- /qsys.lib/OJASVA.lib/
-- Use above path to upload *SAVF and use PDM Opt B4 or command RSTLIB LIB(OJASVA) DEV(*SAVF) SAVF($OJSAVF);

-- Manual Activities to do in PDM ---------------------------------------------------------------------------------------
-- Press Ctrl+Home to get the screen ruler
-- WRKMBRPDM FILE(OJASVA/QRPGLESRC)
-- Chnage (SEU) Session Defaults: 'Amount to Roll' = 'C', 'Full screen mode' = 'Y', and 'Syntax Checking' = 'N'
-- Full Screen mode in SEU helps you read/write 4 more records/page (default=20, full-screen=24 records)
-- Full Screen mode in PDM helps you read/update 8 more SRCMBR/page (default=8, full-screen=16 SRCMBRs)

-- Manual Activities to do to setup keyboard (*.kmp file) ----------------------------------------------------------------
-- Reassign the key from 'Delete Character' to 'Erase to End of Field'
-- IBM i ACS > Edit > Keyboard > Category = 'Host Functions' > Erase to End of Field > Assign a Key > *press Delete* > Yes
-- Save and find the user files (.kmp, .hod, .ini) at C:\Users\xxx\Documents\IBM\iAccessClient\Emulator

-- ACS Shortcuts ----------------------------------------------------------------------------------------------------------
-- Login using Macro (provided a macro already exists)
-- Alt+A > M > Enter > Enter
-- Open 'Run SQL Scripts'
-- Alt+A > R > Ctrl+O (select the .sql file to open)
-- Open IFS
-- Alt+A > I
